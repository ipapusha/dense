# ident properties (set in parse.py)
# ----------------------------------
# G global
# P persistent
# A function argument
# F function return value
# I for-loop iteration index
# 
# ident properties (set in resolve.py)
# ------------------------------------
# R ref    =...a  or  =...a(b) 
# D def    a=...  or   [a,b,c]=...
# U update a(b)=...  or  [a(b) c(d)]=...

precedence = (
    ("right","DOTDIVEQ","DOTMULEQ","EQ","EXPEQ","MULEQ","MINUSEQ","DIVEQ","PLUSEQ","OREQ","ANDEQ"),
    ("nonassoc","HANDLE"),
    ("left", "COMMA"),
    ("left", "COLON"),
    ("left", "ANDAND", "OROR"),
    ("left", "EQEQ", "NE", "GE", "LE", "GT", "LT"),
    ("left", "OR", "AND"),
    ("left", "PLUS", "MINUS"),
    ("left", "MUL","DIV","DOTMUL","DOTDIV","BACKSLASH"),
    ("right","UMINUS","NEG"),
    ("right","TRANSPOSE"),
    ("right","EXP", "DOTEXP"),
    ("nonassoc","LPAREN","RPAREN","RBRACE","LBRACE"),
    ("left", "FIELD","DOT","PLUSPLUS","MINUSMINUS"),
    )

top :
    | stmt_list
    | top func_decl stmt_list_opt
    | top func_decl END_STMT semi_opt
    | top func_decl stmt_list END_STMT semi_opt
semi_opt :
     | semi_opt SEMI
     | semi_opt COMMA
stmt : continue_stmt
     | break_stmt
     | expr_stmt
     | global_stmt
     | persistent_stmt
     | command
     | for_stmt
     | if_stmt
     | null_stmt
     | return_stmt
     | switch_stmt
     | try_catch
     | while_stmt
     | foo_stmt
     | unwind
unwind : UNWIND_PROTECT stmt_list UNWIND_PROTECT_CLEANUP stmt_list END_UNWIND_PROTECT
arg1 : STRING
     | NUMBER
     | IDENT
     | GLOBAL
args : arg1
     | args arg1
command : ident args SEMI
global_list : ident
               | global_list ident
global_stmt : GLOBAL global_list SEMI
            | GLOBAL ident EQ expr SEMI
foo_stmt : expr OROR expr SEMI
persistent_stmt :  PERSISTENT global_list SEMI
                |  PERSISTENT ident EQ expr SEMI
return_stmt : RETURN SEMI
continue_stmt : CONTINUE SEMI
break_stmt : BREAK SEMI
switch_stmt : SWITCH expr semi_opt case_list END_STMT
case_list : 
          | CASE expr sep stmt_list_opt case_list
          | CASE expr error stmt_list_opt case_list
          | OTHERWISE stmt_list
try_catch : TRY stmt_list CATCH stmt_list END_STMT
          | TRY stmt_list END_STMT
null_stmt : SEMI
          | COMMA
func_decl : FUNCTION ident args_opt SEMI 
          | FUNCTION ret EQ ident args_opt SEMI 
args_opt :
         | LPAREN RPAREN
         | LPAREN expr_list RPAREN
arg_list : ident
         | arg_list COMMA ident
ret : ident
    | LBRACKET RBRACKET
    | LBRACKET expr_list RBRACKET
stmt_list_opt : 
              | stmt_list
stmt_list : stmt
          | stmt_list stmt
concat_list : expr_list SEMI expr_list
            | concat_list SEMI expr_list
expr_list : exprs
          | exprs COMMA
exprs : expr
      | exprs COMMA expr
expr_stmt : expr_list SEMI
while_stmt : WHILE expr SEMI stmt_list END_STMT
sep : COMMA
    | SEMI
if_stmt : IF expr sep stmt_list_opt elseif_stmt END_STMT
        | IF expr error stmt_list_opt elseif_stmt END_STMT
elseif_stmt :
            | ELSE stmt_list_opt
            | ELSEIF expr sep stmt_list_opt elseif_stmt 
for_stmt : FOR ident EQ expr SEMI stmt_list END_STMT
         | FOR LPAREN ident EQ expr RPAREN SEMI stmt_list END_STMT
         | FOR matrix EQ expr SEMI stmt_list END_STMT

################  expr  ################

expr : ident
     | end
     | number
     | string
     | colon
     | NEG
     | matrix
     | cellarray
     | expr2
     | expr1
     | lambda_expr
     | expr PLUSPLUS
     | expr MINUSMINUS
#    | PLUSPLUS ident
#    | MINUSMINUS ident
lambda_args : LPAREN RPAREN
            | LPAREN arg_list RPAREN
lambda_expr : HANDLE lambda_args expr
ident : IDENT
number : NUMBER
end : END_EXPR
string : STRING
colon : COLON
expr1 : MINUS expr %prec UMINUS
      | PLUS expr %prec UMINUS
      | NEG expr
      | HANDLE ident
      | PLUSPLUS ident
      | MINUSMINUS ident
cellarray : LBRACE RBRACE
          | LBRACE expr_list RBRACE
          | LBRACE concat_list RBRACE
          | LBRACE concat_list SEMI RBRACE
matrix : LBRACKET RBRACKET
       | LBRACKET concat_list RBRACKET
       | LBRACKET concat_list SEMI RBRACKET
       | LBRACKET expr_list RBRACKET
       | LBRACKET expr_list SEMI RBRACKET
expr :  LPAREN expr RPAREN
expr : expr FIELD 
expr : expr TRANSPOSE
expr : expr LBRACE expr_list RBRACE
     | expr LBRACE RBRACE
expr : expr LPAREN expr_list RPAREN 
     | expr LPAREN RPAREN
expr2 : expr AND expr
      | expr ANDAND expr
      | expr BACKSLASH expr
      | expr COLON expr
      | expr DIV expr
      | expr DOT expr
      | expr DOTDIV expr
      | expr DOTDIVEQ expr
      | expr DOTEXP expr
      | expr DOTMUL expr
      | expr DOTMULEQ expr
      | expr EQEQ expr
      | expr EXP expr
      | expr EXPEQ expr
      | expr GE expr
      | expr GT expr 
      | expr LE expr
      | expr LT expr
      | expr MINUS expr
      | expr MUL expr
      | expr NE expr
      | expr OR expr
      | expr OROR expr
      | expr PLUS expr
      | expr EQ expr
      | expr MULEQ expr
      | expr DIVEQ expr
      | expr MINUSEQ expr
      | expr PLUSEQ expr
      | expr OREQ expr
      | expr ANDEQ expr
